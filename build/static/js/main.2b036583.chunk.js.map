{"version":3,"sources":["store/actionTypes.js","components/Login.js","components/Produto.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","initialState","username","password","useStyles","makeStyles","theme","form","padding","Login","props","styles","useState","values","setValues","error","setError","dispatch","useDispatch","onChange","event","target","value","name","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","myId","console","log","closeDialog","type","userId","myFavs","login","className","Input","id","Button","root","flexGrow","paper","spacing","margin","textAlign","color","palette","text","primary","Produto","productIndex","useSelector","state","favorite","setFavorite","logged","isLogged","currentUser","favMe","index","undefined","useEffect","map","produtos","productId","nome","preco","descricao","Grid","item","xs","Paper","onClick","INITIAL_STATE","store","createStore","action","App","isLoading","isDialogOpen","bind","process","FRONT_PORT","setState","catch","this","showMyPort","fetchProds","Container","justify","variant","e","showDialog","Dialog","open","IconButton","Object","keys","key","container","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b036583.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Input, makeStyles } from '@material-ui/core';\nimport { LOGIN_SUCCESS } from '../store/actionTypes';\n\nfunction initialState() {\n    return { username: '', password: '' }\n}\nconst useStyles = makeStyles((theme) => ({\n    form: {\n      padding: 30\n    }\n  }));\n  \nconst Login = (props) => {\n    const styles = useStyles();\n    const [values, setValues] = useState(initialState);\n    const [error, setError] = useState(null);\n\n    const dispatch = useDispatch();\n\n    function onChange(event) {\n        const { value, name } = event.target;\n        setValues({\n            ...values,\n            [name]: value,\n        })\n    }\n\n    function onSubmit(event) {\n        event.preventDefault();\n        login(values);\n        setError(error);\n        setValues(initialState);\n    }\n    function login({ username, password }) {\n        return fetch('http://localhost:8080/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.myId !== -1) {\n                    console.log(data.myId)\n                    props.closeDialog()\n                    dispatch({type:LOGIN_SUCCESS, data: {\n                        userId:data.myId,\n                        myFavs:data.myFavs\n                        }\n                    })\n                }\n            })\n    }\n    return (\n        <form onSubmit={onSubmit} className={styles.form}>\n            <label>\n                <p>Email</p>\n                <Input type=\"text\" id=\"username\" name=\"username\" onChange={onChange} value={values.username}></Input>\n            </label>\n            <br /><br />\n            <label>\n                <p>Senha</p>\n                <Input type=\"password\" id=\"password\" name=\"password\" onChange={onChange} value={values.password}></Input>\n            </label>\n            <br /><br />\n            <Button type=\"submit\">Login</Button>\n            {error ? <span> Deu erro! </span> : <></>}\n        </form>\n    )\n}\n\nexport default Login","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { Button, Paper, Grid } from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(4),\n    margin: theme.spacing(4),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Produto = ({ body, productIndex }) => {\n  const styles = useStyles();\n\n  const [favorite, setFavorite] = useState(useSelector(state => state.myFavs !== [] ? state.myFavs[productIndex] : false));\n  let logged = useSelector(state => state.isLogged);\n  let myFavs = useSelector(state => state.myFavs);\n  let currentUser = useSelector(state => state.userId);\n\n\n  useEffect(() => {\n      setFavorite(myFavs[productIndex] ? myFavs[productIndex] : false);\n  }, [myFavs]);\n\n  function favMe() {\n    for(let index = 0; index <= productIndex; index++) {\n      if (index === productIndex) {\n        myFavs[productIndex] = !myFavs[productIndex];\n      }\n      else if (myFavs[index] === undefined) {\n        myFavs[index] = false;\n      }\n    }\n\n    return fetch('http://localhost:8080/favme',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({myFavs: myFavs, userId:currentUser})\n      })\n      .then(setFavorite(!favorite))\n  }\n  return (\n    <div className={styles.root}>\n      {body.map(produtos => {\n        const { productId, nome, preco, descricao } = produtos;\n        return (\n          <Grid item xs={12} key={productId}>\n            <Paper className={styles.paper}>\n              <h1>{nome}</h1>{!logged ? <></> : <Button onClick={favMe}>{favorite ? <StarIcon /> : <StarBorderIcon />}</Button>}\n              <p>R$ {preco}</p>\n              <p>{descricao}</p>\n            </Paper>\n          </Grid>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Produto","import { createStore } from 'redux';\nconst INITIAL_STATE = {\n    isLogged: false,\n    userId: null,\n    myFavs: []\n};\n\nfunction actions(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'LOGIN_SUCCESS':\n            {\n                return { ...state, isLogged: true, myFavs: action.data.myFavs, userId: action.data.userId}\n            }\n        default:\n            return state;\n    }\n}\nconst store = createStore(actions);\n\nexport default store\n","//Imports do React e Redux\nimport React from 'react';\nimport { Provider } from 'react-redux';\n\n//Imports de Componentes Próprios\nimport Login from './components/Login';\nimport Produto from './components/Produto.js';\nimport store from './store/store.js'\n\n//Imports do MaterialUI\nimport { Button, Dialog, IconButton, Grid, Container } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n//Imports de Estilos Próprios\nimport './App.css';\n\n//Componente raíz da aplicação declarado como uma classe\nclass App extends React.Component {\n\n  //Super Construtor da classe e declaração de estado inicial\n  constructor(props) {\n    super(props);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n  state = {\n    isLoading: true,\n    isDialogOpen: false,\n    produtos: [],\n    error: null,\n    isLogged: false,\n  };\n  showMyPort() {\n    console.log(process.env.FRONT_PORT)\n  }\n  //Métodos destinados a alcançar os produtos na API (porta 8080), executado apenas após a montagem dos componentes\n  fetchProds() {\n    fetch(`http://localhost:8080/todos`)\n      .then(response => response.json())\n      .then(\n        data =>\n          this.setState({\n            ...this.state,\n            produtos: data,\n            isLoading: false,\n          }),\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  componentDidMount() {\n    this.showMyPort()\n    this.fetchProds();\n  }\n\n  //Métodos de \"Abre e Fecha\" da popup de login\n  showDialog() {\n    this.setState({\n      ...this.state,\n      isDialogOpen: true\n    });\n  }\n\n  closeDialog() {\n    this.setState({\n      ...this.state,\n      isDialogOpen: false\n    });\n  }\n\n  //Renderização do componente raíz da aplicação\n  render() {\n    const { isLoading, produtos } = this.state;\n    return (\n      <Provider store={store}>\n        <Container justify=\"center\">\n          <Container justify=\"center\">\n            <h1>Nosso Catálogo</h1>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => this.showDialog()}> Login </Button>\n          </Container>\n          <Dialog open={this.state.isDialogOpen}>\n            <IconButton onClick={this.closeDialog}>\n              <CloseIcon />\n            </IconButton>\n            <Login closeDialog={this.closeDialog} />\n          </Dialog>\n\n          {!isLoading ? Object.keys(produtos).map((key, index) =>\n            <Grid container justify=\"center\" spacing={3}>\n              <Produto productIndex={index} body={[produtos[key]]} />\n            </Grid>) : <h3>Loading...</h3>}\n        </Container>\n      </Provider>\n    );\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}